Angular 2

https://angular.io
https://github.com/loiane/curso-angular2
es6-features.org/#Constants
https://babeljs.io

- Components
- Directives
- Routes
- Services
- Template
- Metadata
- Data Binding
- DI (Dependency Injection)

Pre-requires
- Install NodeJs: node -v
- Install sudo npm install -g @angular/cli (Requires node >= 4)
ng -v
- Install sudo npm install -g typescript

- Install sudo npm install ng2-bootstrap bootstrap --save
https://github.com/valor-software/ngx-bootstrap/blob/development/docs/getting-started/ng-cli.md
"../node_modules/bootstrap/dist/css/bootstrap.min.css", // input this tag Style on file .angulas-cli.json

If you have problems to up server, follow the steps below:
- rm -r node_modules (or delete your node_modules folder manually)
- npm cache clean (doesnt not work in npm v5)
- npm install

Text Editor
- Visual Code
- WebStorm
- Atom
- Sublime

Commands Angular
Create a new project: ng new <name-of-project>
- Using pre-processor for a new project:
    ng new <name-of-project> --style=sass
    ng new <name-of-project> --style=less
    ng new <name-of-project> --style=stylus
- Using pre-processor for a existing project
    ng set defaults.styleExt scss
    ng set defaults.styleExt less
    ng set defaults.styleExt styl    

ng lint: Scann your code for search bugs
ng test: Using Jasmine for test in your app
ng e2e: Using for integration tests.

BUILD DEV:
ng build --target=development --enviroment=dev
ng build --dev --e=dev
ng build --dev
ng build

BUILD PRD:
ng build --target=production --enviroment=prod
ng build --prod --e=prod
ng build --prod

Install server NodeJs
npm install http-server -g

Up app on server: ng serve
Create a new component: ng generate component <name-component> / ng g c <name-component>
Create a new module: ng generate module <name-module> / ng g m <name-module>
Create a new service: ng generate service <name-service> / ng g s <name-service>
Create a new directive: ng generate directive <name-directive> / ng g d <name-directive>
Create a new pipe: ng generate pipe <name-pipe> / ng g p <name-pipe>
Create a new class: ng generate class <name-class> / ng g c <name-class>
Create a new interface: ng generate interface <name-interface> / ng g i <name-interface>
Create a new enum: ng generate enum <name-enum> / ng g e <name-enum>
Compile a file typescript: tsc main.ts

Plugins Text Editor (Atom)
 - Angular-2-typescript-snippets
 - atom-typescript
 - linter
 - file-icons
 - open-recent
 - pigments

 Plugins Text Editor (Visual Code)
 - Angular 2,4
 - Angular typescript snippets
 - Atom one dark theme
 - html snippets
 - Ionic 2 commands
 - vscode-icons
 
====================================================================================================
 Bootstrap
 To install: npm install --save bootstrap@next
 Open file .angular-cli.json and input the code below on tag scripts:
      "styles": [
        "styles.css",
        "../node_modules/bootstrap/dist/css/bootstrap.css"
       ],
      "scripts": [
        "../node_modules/jquery/dist/jquery.js",
        "../node_modules/tether/dist/js/tether.js",
        "../node_modules/bootstrap/dist/css/bootstrap.min.js"
      ],

Materialize
To install: 
    npm install materialize-css --save
    npm install angular2-materialize --save

    Import the code below to your app.module.ts
    import { MaterializeModule } from 'angular2-materialize';

JQuery
To install:
    npm install jquery@^2.2.4 --save

Lodash
To install:
    npm install --save lodash
    npm install --save @types/lodash










